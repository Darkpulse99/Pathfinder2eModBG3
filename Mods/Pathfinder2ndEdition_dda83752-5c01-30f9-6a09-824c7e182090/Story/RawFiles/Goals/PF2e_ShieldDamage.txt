Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_ShieldBlockInterrupts("Interrupt_ShieldBlock");
DB_ShieldBlockInterrupts("QuickShieldBlockInterrupt");
DB_ShieldBlockInterrupts("ShieldWardenBlock");
DB_ShieldBlockInterrupts("MetalShieldBlock");

DB_ShieldTemplates(MAG_Absolute_Protecter_Shield_53b3317f-5a52-41c0-89ea-c6ef31adc4f7, 39, 79);
DB_ShieldTemplates(MAG_BG_OfDevotion_Shield_a0bc3295-c01d-405e-8396-e0fa7e1e5340, 51, 103);
DB_ShieldTemplates(MAG_ChargedLightning_StaticDischarge_Shield_93c2143c-1c9f-493e-9fee-2310c7bee672
DB_ShieldTemplates(MAG_Druid_Ironvine_Shield_eb06636a-8052-492e-bfb1-67fcb18358d1, 31, 63);
DB_ShieldTemplates(MAG_Enforcer_NonLethalBlessing_Shield_35be7c52-fe89-4bec-9d15-0d7ddb94bf38, 31, 63);
DB_ShieldTemplates(MAG_FlamingFist_Flaming_Shield_8c7caa2a-7c11-4f0b-86a8-b8808057101b, 39, 79);
DB_ShieldTemplates(MAG_Harpers_ShieldsOfShadows_1977f0ae-4269-4024-bb3b-a4cca54fafe0, 31, 63);
DB_ShieldTemplates(MAG_Ketheric_Shield_6cb88e48-70ce-4304-b3b6-db52d1880bec, 39, 79);
DB_ShieldTemplates(MAG_LowHP_TemporaryHP_Shield_3374ad91-ddcf-430a-bddd-f48e8699ade9, 31, 63);
DB_ShieldTemplates(MAG_MissileProtection_Shield_e308d17c-7278-44c1-b1fc-853ea3cf5c29, 51, 103);
DB_ShieldTemplates(MAG_OB_Paladin_DeathKnight_Shield_b3571443-403b-431b-b4ba-3d943a500f4b, 51, 103);
DB_ShieldTemplates(MAG_ofShielding_Shield_dfeaa5fd-1f87-4f99-85b0-8f49664d691f, 39, 79);
DB_ShieldTemplates(MAG_PHB_Sentinel_Shield_2baa835f-1422-43f0-9d2a-11e601fbb25e, 39, 79);
DB_ShieldTemplates(MAG_Safeguard_Shield_3138b480-3ef6-42af-ba35-e4cad4e962ee, 31, 63);
DB_ShieldTemplates(MAG_Steadfast_Shield_1cee750f-79c6-4109-8272-d27b97ef02df, 51, 103);
DB_ShieldTemplates(MAG_TheBulwark_Shield_4f313dde-14bb-43a2-abdd-07b2eb38b33a, 59, 119);
DB_ShieldTemplates(MAG_WoodWoad_Nature_Shield_90ba50bd-3e65-42ec-9f21-6e07d3ed89ab, 31, 63);
DB_ShieldTemplates(MAG_Justiciar_Shield_a189686a-cfcf-4157-9c18-f7a8e7f0be87, 9, 19);
DB_ShieldTemplates(UNI_TWN_WPN_HUM_ShieldOfWatcher_D_1_cb2b1ac8-5589-464f-ac9f-ccd6fd27ebed, 31, 63);
DB_ShieldTemplates(WPN_Duergar_Shield_B_1_8cdcb6bb-be71-4f26-9871-9312514c2436, 39, 79);
DB_ShieldTemplates(WPN_Duergar_Shield_C_1_b7d8a185-dfc5-4113-ab53-0ca009073c8d, 39, 79);
DB_ShieldTemplates(WPN_Drow_Shield_A_0_e4b4c45f-0563-4b00-851c-30a64fcb18ec, 9, 19);
DB_ShieldTemplates(WPN_Drow_Shield_A_0_Absolute_004ab562-5cd4-4f1f-8aa5-497e7e2c5f4f, 9, 19);
DB_ShieldTemplates(WPN_Drow_Shield_A_1_ad0b5ac2-ca57-4538-a326-8e819d6ab034, 9, 19);
DB_ShieldTemplates(WPN_Duergar_Shield_B_0_747387ac-0dc7-47ab-8c69-75269ffc4dbc, 9, 19);
DB_ShieldTemplates(WPN_Duergar_Shield_C_0_31c99c28-f062-44ba-9ee6-cf969af920c4, 9, 19);
DB_ShieldTemplates(WPN_GOB_Shield_A_0_NOT_APPROVED_dd7550d6-112d-476e-9234-4901a95bd7f6, 9, 19);
DB_ShieldTemplates(WPN_GOB_Shield_B_0_NOT_APPROVED_89bb450f-d976-4981-b43e-b5d16948da1e, 9, 19);
DB_ShieldTemplates(WPN_GOB_Shield_C_0_NOT_APPROVED_e0d5a057-328a-467d-b8fb-1bfd298d59e7, 9, 19);
DB_ShieldTemplates(WPN_GOB_Shield_D_0_NOT_APPROVED_33ab760a-e617-4e12-a3c6-1758c83cc3a7, 9, 19);
DB_ShieldTemplates(WPN_GOB_Shield_E_0_NOT_APPROVED_2ae874a1-4573-4de3-a595-444591564303, 9, 19);
DB_ShieldTemplates(WPN_Guardian_of_Faith_Shields_Selune_22dd91be-6433-4569-a7b3-ce3d6ea59b5b, 9, 19);
DB_ShieldTemplates(WPN_GuardianOfFaith_Shield_Evil_65fff410-33fd-49a6-aacd-d24610bc0e7b, 9, 19);
DB_ShieldTemplates(WPN_GuardianOfFaith_Shield_Good_efdb7b03-83b0-4284-b1fb-06c5c78424d0, 9, 19);
DB_ShieldTemplates(WPN_GuardianOfFaith_Shield_Neutral_134a78a5-7a20-415a-9af1-5b141db51d42, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_A_0_d2af60ea-1b72-4d25-a188-6d8bc4fe255b, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_A_1_cb2d6c27-ec29-4555-adf2-41e8c1952439, 39, 79);
DB_ShieldTemplates(WPN_HUM_Shield_A_2_NOT_APPROVED_49979c37-1a3a-46f8-af5b-2ea63fc11722, 51, 103);
DB_ShieldTemplates(WPN_HUM_Shield_Adamantine_A_96907713-b560-4daf-ab32-3c1aec3f3890, 39, 79);
DB_ShieldTemplates(WPN_HUM_Shield_B_0_24fa28d4-f679-44bf-865e-c7e70dcb9588, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_B_1_a28ecc05-b67b-493b-8cd2-ac7229e703d2, 39, 79);
DB_ShieldTemplates(WPN_HUM_Shield_Broken_A_d59619ef-320f-4c16-8e21-0644034f0c26, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_C_0_4491fcaf-03bf-4087-baf3-b638657080f6, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_C_1_badf2418-01ac-410d-931e-72b1dac071c7, 39, 79);
DB_ShieldTemplates(WPN_HUM_Shield_D_0_c069f1f2-1040-4c71-b796-5a95eecfa711, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_D_0_Rusty_A_8c02c87f-955d-4cc2-b547-f22462ad7106, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_D_1_26b81847-b0dd-4150-aef7-602fcbb72eca, 39, 79);
DB_ShieldTemplates(WPN_HUM_Shield_DeathKnight_5b8fe99f-56d9-48a8-a9d0-8290ebae6461, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_E_2_89792dc1-221b-462e-adcb-026f2cafbb95, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_FlamingFist_ab10f66f-6e93-43f5-9384-82565f14124a, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_FlamingFist_1_6fb7aabd-bdf8-4fd4-b43c-6cc6c07e99b1, 9, 19);
DB_ShieldTemplates(WPN_HUM_Shield_Myrkul_A_5d4c7c48-8531-494f-8fc3-936122d8a6fa, 9, 19);
DB_ShieldTemplates(WPN_HUM_Toy_Shield_A_e13facc6-aced-4b48-b239-b0e76448013f, 9, 19);
DB_ShieldTemplates(WPN_Kuotoa_Shield_A_0_2099af4a-caa2-4e06-9b6d-fa6e9754bd09, 9, 19);
DB_ShieldTemplates(WPN_Kuotoa_Shield_A_1_917d76c0-1969-4cd5-b5fe-7bf406081283, 9, 19);
DB_ShieldTemplates(WPN_LOW_RamazithsTower_Nightsong_Silver_Shield_daadda55-d439-47eb-a308-acaf575a7fd5, 9, 19);
DB_ShieldTemplates(WPN_Wood_Woad_Shield_41b07341-1bf3-450d-9303-377c035c09ac, 9, 19);

KBSECTION
//REGION
IF
ReactionInterruptUsed((CHARACTER)_Defender, (STRING)_Interrupt, _)
AND
DB_ShieldBlockInterrupts(_Interrupt)
AND
GetEquippedShield(_Defender, (ITEM)_Shield)
THEN
DB_ShieldBlockUsed(_Defender, _Shield);

IF
ReactionInterruptUsed((CHARACTER)_Defender, (STRING)_Interrupt, _)
AND
DB_ShieldBlockInterrupts(_Interrupt)
AND
GetEquippedShield(_Defender, (ITEM)_Shield)
AND
NOT DB_ShieldDamage(_Shield, _)
THEN
DB_ShieldDamage(_Shield, 0);

IF
AttackedBy((CHARACTER)_Defender, _, (CHARACTER)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, _, _)
AND
GetEquippedShield(_Defender, (ITEM)_Shield)
AND
DB_ShieldBlockUsed(_Defender, _Shield)
AND
DB_ShieldDamage(_Shield, (INTEGER)_Damage)
AND
IntegerSum(_Damage, _DamageAmount, (INTEGER)_NewDamage)
THEN
NOT DB_ShieldDamage(_Shield, _Damage);
DB_ShieldDamage(_Shield, _NewDamage);
PROC_ApplyNewShieldStatus(_Shield, _NewDamage);
PROC_CheckShieldBreak(_Shield, _Shield, _NewDamage, _Defender);
PROC_CheckShieldDestroy(_Shield, _Shield, _NewDamage, _Defender, _Attacker);
NOT DB_ShieldBlockUsed(_Defender, _Shield);

PROC
PROC_ApplyNewShieldStatus((GUIDSTRING)_ShieldGUID, (INTEGER)_Damage)
AND
IntegerToReal(_Damage, (REAL)_DamageReal)
AND
_DamageReal > 0.5
AND
RealProduct(_DamageReal, 6.0, (REAL)_Duration)
THEN
ApplyStatus(_ShieldGUID, "SHIELD_DAMAGE", _Duration, 1);

PROC
PROC_CheckShieldBreak((GUIDSTRING)_ShieldGUID, (ITEM)_Shield, (INTEGER)_Damage, (CHARACTER)_Owner)
AND
GetTemplate(_ShieldGUID, (GUIDSTRING)_Template)
AND
DB_ShieldTemplates(_Template, (INTEGER)_BreakThreshold, (INTEGER)_DestroyThreshold)
AND
HasActiveStatus(_ShieldGUID, "SHIELD_BROKEN", 0)
AND
_Damage > _BreakThreshold
THEN
ApplyStatus(_ShieldGUID, "SHIELD_BROKEN", -1.0, 1);
Unequip(_Owner, _Shield);

PROC
PROC_CheckShieldDestroy((GUIDSTRING)_ShieldGUID, (ITEM)_Shield, (INTEGER)_Damage, (CHARACTER)_Owner, (GUIDSTRING)_Attacker)
AND
GetTemplate(_ShieldGUID, (GUIDSTRING)_Template)
AND
DB_ShieldTemplates(_Template, (INTEGER)_BreakThreshold, (INTEGER)_DestroyThreshold)
AND
_Damage > _DestroyThreshold
THEN
Unequip(_Owner, _Shield);
Die(_ShieldGUID, DEATHTYPE.None, _Attacker, 0, 0, 1.0);

//END_REGION

//REGION Check if a shield should be broken when equipped as fallback.

IF
Equipped((ITEM)_Shield, (CHARACTER)_Owner)
AND
DB_ShieldDamage(_Shield, (INTEGER)_Damage)
THEN
PROC_CheckShieldBreak(_Shield, _Shield, _Damage, _Owner);
PROC_CheckShieldDestroy(_Shield, _Shield, _Damage, _Owner, _Owner);

//END_REGION

//REGION Repair shield by 5 HP evry time it receives SHIELD_REPAIR condition

IF
StatusApplied((ITEM)_Shield, "SHIELD_REPAIR", (CHARACTER)_Cause, _)
AND
DB_ShieldDamage(_Shield, (INTEGER)_Damage)
AND
IntegerSubtract(_Damage, 5, (INTEGER)_NewDamage)
THEN
NOT DB_ShieldDamage(_Shield, _Damage);
DB_ShieldDamage(_Shield, _NewDamage);
PROC_RemoveShieldStatuses(_Shield);
PROC_ApplyNewShieldStatus(_Shield, _NewDamage);
PROC_CheckShieldBreak(_Shield, _Shield, _NewDamage, _Cause);

PROC
PROC_RemoveShieldStatuses((GUIDSTRING)_ShieldGUID)
THEN
RemoveStatus(_ShieldGUID, "SHIELD_BROKEN");
RemoveStatus(_ShieldGUID, "SHIELD_DAMAGE");

//END_REGION
EXITSECTION

ENDEXITSECTION
